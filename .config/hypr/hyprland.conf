# https://wiki.hyprland.org/Configuring/Monitors/
# monitor=DP-1,preferred,0x0,1
# monitor=eDP-1,preferred,160x1080,auto

# TODO startwl
exec-once = waybar & way-displays & hyprpaper & chromium

# TODO desktop portal setup
# https://www.reddit.com/r/hyprland/comments/xaujb9/comment/io22tyi/?context=3

# TODO:
# - Run or raise
# - (e)dit
# - (p)roject
#  - (w)orkon idempotent, takes a git clone URL or local path; runs a command supplied
# - (w)indow
# - 

exec-once = "swayidle -w\
  idlehint 120 \
  timeout 1200 'swaylock' \
  before-sleep 'swaylock'"
  # timeout 600 'hyprctl dispatch dpms off' \
  # resume 'hyprctl dispatch dpms on' \

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# See https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options = caps:escape,altwin:swap_alt_win
    kb_rules =
    follow_mouse = 1
    touchpad {
        natural_scroll = no
    }
    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

device:microsoft-microsoftÂ®-2.4ghz-transceiver-v9.0-mouse {
     # discrete-scroll-factor = 120
}


general {
    gaps_in = 0
    gaps_out = 0
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)
    layout = master
}

decoration {
    rounding = 0
    blur = no
    blur_size = 3
    blur_passes = 1
    blur_new_optimizations = on
    drop_shadow = no
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}
animations {
    enabled = no
    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = on
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
# device:epic mouse V1 {
#     sensitivity = -0.5
# }

# Example windowrule v1
# windowrule = float, ^(kitty$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

bind = $mainMod SHIFT, R, exec, hyprctl reload
bind = $mainMod SHIFT, E, exit,
# bind = $mainMod SHIFT, Return, exec, kitty
bind = $mainMod, Q, exec, kitty
# bind = $mainMod, E, exec, dolphin

# shows how to bind a modkey press and release
# bindr = $mainMod, $mainMod_L, exec, pkill wofi || wofi --show drun # opens on first press, closes on second

bind = $mainMod, F, fullscreen
bind = $mainMod SHIFT, F, fakefullscreen

bind = , XF86AudioLowerVolume, exec, pamixer -d 5
bind = , XF86AudioRaiseVolume, exec, pamixer -i 5
bind = , XF86AudioMute, exec, pamixer --toggle-mute
bind = , XF86MonBrightnessUp, exec, light -A 5
bind = , XF86MonBrightnessDown, exec, light -U 5

bind = $mainMod, C, killactive, 
bind = $mainMod, V, togglefloating, 

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}
bind = $mainMod, P, pseudo,
bind = $mainMod, T, togglesplit,
bind = $mainMod, G, togglegroup, g
# bind = $mainMod CONTROL, G, lockgroups, g
bind = $mainMod, N, changegroupactive, f
bind = $mainMod, P, changegroupactive, b
bind = $mainMod, Minus, focuscurrentorlast


# https://github.com/search?q=filename%3Ahyprland.conf++cycleprev&type=Code
master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
    special_scale_factor = 0.5 #(0.0 - 1.0) the scale of the special workspace windows	float	0.8
    # new_is_master	whether a newly open window should replace the master or join the slaves.	bool	true
    # new_on_top	whether a newly open window should be on the top of the stack	bool	false
    no_gaps_when_only true # whether to apply gaps when there is only one window on a workspace, aka. smart gaps.	bool	false
    # inherit_fullscreen	inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)	bool	true
}
bind = $mainMod, Return, layoutmsg, focusmaster
bind = $mainMod SHIFT, Return, layoutmsg, swapwithmaster
bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod SHIFT, J, layoutmsg, swapnext
bind = $mainMod SHIFT, K, layoutmsg, swapprev
bind = $mainMod SHIFT, H, layoutmsg, addmaster
bind = $mainMod SHIFT, L, layoutmsg, removemaster

bind = $mainMod, comma, focusmonitor, +1
bind = $mainMod SHIFT, comma, movewindow, mon:+1
bind = $mainMod CONTROL, comma, movecurrentworkspacetomonitor, +1

bind = $mainMod, grave, togglespecialworkspace, notes
bind = $mainMod SHIFT, grave, movetoworkspace, special:notes

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
# bind = $mainMod, K, movefocus, u
# bind = $mainMod, J, movefocus, d

# Move window
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# bind = $mainMod SHIFT, H, movewindow, l
# bind = $mainMod SHIFT, L, movewindow, r
# bind = $mainMod SHIFT, K, movewindow, u
# bind = $mainMod SHIFT, J, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
