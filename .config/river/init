#!/bin/sh
# refs
# - https://leon_plickat.srht.site/blog/setting-up-river-010/article.html
# - https://github.com/uncomfyhalomacro/river-paper-theme/blob/main/river/init

riverctl set-repeat 50 300
riverctl focus-follows-cursor normal
# TODO: attach-mode after/before?
riverctl attach-mode bottom
riverctl set-cursor-warp on-focus-change
case "$(hostname)" in
	"chip")
		riverctl input 1739:30383:DLL075B:01_06CB:76AF_Touchpad tap enabled
		;;
esac

mod="Super"
# TODO: make these work in river
EMPTY_TERM="exec-with-pwd $TERMINAL"
#winmenu="i3-windows-and-run --menu \"wofi\" -- -id"
interm=$TERMINAL # some terms need -e for exec etc
browser=qutebrowser

# TODO: move some of these to a separate script
riverctl spawn "mako --default-timeout 10000 # notifications"
riverctl map normal $mod Escape spawn "makoctl dismiss"
way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1 & # https://github.com/alex-courtis/way-displays
riverctl spawn river-tag-overlay
riverctl spawn "swayidle -w\
    idlehint 120 \
    timeout 600 'wlopm --off \*' \
       resume 'wlopm --on \*' \
    timeout 900 'systemctl suspend'""
    before-sleep 'swaylock-blur -- -f'"


riverctl background-color       "0x404040"
riverctl border-color-unfocused "0x202020"
riverctl border-color-focused   "0xF0F0F0"
riverctl border-width 1
c# riverctl xcursor-theme tarazed
gsettings set org.gnome.desktop.interface gtk-theme Adwaita
gsettings set org.gnome.desktop.interface icon-theme Breeze
gsettings set org.gnome.desktop.wm.preferences button-layout " "
gsettings set org.gnome.desktop.interface cursor-theme tarazed

riverctl map normal $mod+Shift Return spawn "$TERMINAL"
riverctl map normal $mod d spawn "wofi -p 'Type app or command' --show drun,run -i"
# riverctl map normal $mod i spawn "$interm journal -p "
# riverctl map normal $mod+Shift i spawn "$interm journal -pf"
riverctl map normal $mod o spawn "$interm wf"
riverctl map normal $mod+Shift o spawn "$interm wff"

riverctl map normal $mod+Control s spawn "screenshot"
# start recording a video
riverctl map normal $mod+Control+Shift s spawn "$interm "screencap""
riverctl map normal $mod n spawn "networkmanager_dmenu"
riverctl map normal $mod b spawn "btmenu"

for mode in normal locked; do
    # riverctl map $mode None XF86Eject spawn 'eject -T'
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

riverctl float-filter-add "float" # app-ids of views which should float
riverctl float-filter-add "popup"
# riverctl csd-filter-add "gedit" # use client side decorations

riverctl map normal $mod c close
riverctl map normal $mod+Shift E exit

riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous
riverctl map normal $mod Return zoom # bump focused view to top of layout stack

# move views
riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

# snap views to screen edges
riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

# resize views
riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# mod + mouse
riverctl map-pointer normal $mod BTN_LEFT move-view
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# Scratchpad #
scratch_tag=$((1 << 20 ))
riverctl map normal $mod       grave toggle-focused-tags ${scratch_tag}
riverctl map normal $mod+Shift grave toggle-view-tags ${scratch_tag}
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# tags
for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))
    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags
    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags
    # Mod+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags
    # Mod+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags
riverctl map normal $mod       Backspace focus-previous-tags

riverctl map normal $mod+Shift F toggle-float
riverctl map normal $mod F toggle-fullscreen

# passthrough mode for testing a nested wayland compositor etc
riverctl declare-mode passthrough
riverctl map normal $mod F11 enter-mode passthrough
riverctl map passthrough $mod F11 enter-mode normal

riverctl default-layout stacktile
# River will send the process group of the init executable SIGTERM on exit.
exec stacktile --primary-sublayout \"${sublayout}\" \
               --per-tag-config
riverctl map normal $mod       H     send-layout-cmd stacktile "primary_ratio -0.05"
riverctl map normal $mod       L     send-layout-cmd stacktile "primary_ratio +0.05"
riverctl map normal $mod+Shift H     send-layout-cmd stacktile "primary_count  +1"
riverctl map normal $mod+Shift L     send-layout-cmd stacktile "primary_count  -1"
riverctl map normal $mod       Minus send-layout-cmd stacktile "all_padding -10"
riverctl map normal $mod       Plus  send-layout-cmd stacktile "all_padding +10"
riverctl map normal $mod       Up    send-layout-cmd stacktile "primary_position top"
riverctl map normal $mod       Right send-layout-cmd stacktile "primary_position right"
riverctl map normal $mod       Down  send-layout-cmd stacktile "primary_position bottom"
riverctl map normal $mod       Left  send-layout-cmd stacktile "primary_position left"
# to emulate rivertile: `stacktile --per-tag-config --primary-sublayout rows --remainder-sublayout rows --secondary-count 0`
# to place all views in the full layout: "primary_sublayout full" and "all_primary_toggle"
