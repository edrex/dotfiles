" Comment the following line if you don't want Vim and NeoVim to share the
" same plugin download directory.
let g:spacevim_plug_home = '~/.vim/plugged'

" Uncomment the following line to override the leader key. The default value is space key "<\Space>".
" let g:spacevim_leader = "<\Space>"

" Uncomment the following line to override the local leader key. The default value is comma ','.
" let g:spacevim_localleader = ','

" Enable the existing layers in space-vim.
" Refer to https://github.com/liuchengxu/space-vim/blob/master/layers/LAYERS.md for all available layers.
let g:spacevim_layers = [
			\ 'better-defaults', 'fzf', 'which-key', 'spacevim', 'git', 'github', 'lightline'
			\ , 'go', 'code-snippets', 'syntax-checking', 'ctags'
			\ , 'editing', 'formatting', 'programming', 'better-motion'
      "\ , 'vimwiki'
      "\ , 'taskwarrior'
      \ , 'file-manager'
      \ ]

" Uncomment the following line if your terminal(-emulator) supports true colors.
let g:spacevim_enable_true_color = 1
" let g:spacevim_lsp_engine = 'coc'
" Uncomment the following if you have some nerd font installed.
let g:spacevim_nerd_fonts = 1
let g:spacevim_excluded = ['dominikduda/vim_current_word']
" let g:spacevim_enable_clap = 1
" If you want to have more control over the layer, try using Layer command.
" if g:spacevim.gui
"   Layer 'airline'
" endif

source ~/.my.vimrc
" Manage your own plugins.
" Refer to https://github.com/junegunn/vim-plug for more detials.
function! UserInit()

  " Add your own plugin via Plug command.
  "  Plug 'junegunn/seoul256.vim'
  Plug 'jamessan/vim-gnupg'
  Plug 'edrex/vim-deus'
	Plug 'ziglang/zig.vim'
endfunction

" Override the default settings from space-vim as well as adding extras
function! UserConfig()
  colorscheme deus
	" Override the default settings.
	" Uncomment the following line to disable relative number.
	" set norelativenumber

	" Adding extras.
	" Uncomment the following line If you have installed the powerline fonts.
	" It is good for airline layer.
	let g:airline_powerline_fonts = 1
  let s:hidden_all=0
	nnoremap <silent> <Leader>h :call ToggleHideAll()<CR>
endfunction

function! ToggleHideAll() abort
    if s:hidden_all==0
        let s:hidden_all=1
        set noruler
        set laststatus=0
				set norelativenumber
				set nonumber
				set noshowmode  " to get rid of thing like --INSERT--
				set noshowcmd  " to get rid of display of last command
				echo
    else
        let s:hidden_all=0
        set showmode
        set ruler
        set laststatus=2
        set showcmd
				set relativenumber
				set number
    endif
endfunction

function! AdjustColors()
	" get rid of tildes at eof
	hi! EndOfBuffer ctermbg=bg ctermfg=bg guibg=bg guifg=bg 
endfunction

augroup solarized_colors
    autocmd!
    autocmd ColorScheme * call AdjustColors()
augroup END

"me vi:syntax=vim
